class Ammo:
	int capacity,
	int clip-size,
	int cost-per-shot,
	var int clip-left,
	var int total-left;

	overt fun reload ->
		int delta = Math.min(this.total-left, this.clip-size);
		this.clip-left += delta;
		this.total-left -= delta;

class Elemental-Damage ->
	Element this.element-type;
	num this.elemental-damage-multiplier;

class Projectile ->
	has Physics, maybe Elemental-Damage;
	is Renderable;
	Position this.position;
	Direction this.direction;

	overt fun update ->
		// Etc...

class Gun ->
	import Math from `math`;
	has Ammo;
	is Renderable;
	Entity this.owner;

	fun spawn-projectile ->
		GAME.projectiles.push(
			Projectile(
				position: this.owner.position,
				direction: this.owner.direction));

	overt fun shoot ->
		if this.clip-left == 0
			return;
		this.clip-left = Math.max(0, this.clip-left - this.cost-per-shot);
		spawn-projectile();

	overt fun reload ->
		if this.total-left == 0
			return;
		this.Ammo.reload();
		// How do we prevent or circumvent name
		//	clashing with traits/shared consturctors
		//	(has ..., is...)? Do we allow naming them
		//	in those statements, or do we expose the
		//	namespaces under their name like this.ammo
		//	or this.Ammo?
		this.owner.animator.queue(AnimationTypes.reload);