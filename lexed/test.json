{
  "expressions": [
    {
      "raw": "const int: a = 13",
      "tokens": [
        {
          "value": "const",
          "type": "DECLARATION_CONSTANT"
        },
        {
          "value": "int:",
          "type": "DECLARATION_TYPE_INTEGER_SHORT"
        },
        {
          "value": "a",
          "type": "IDENTIFIER"
        },
        {
          "value": "=",
          "type": "OPERATOR_ASSIGNMENT_EQL"
        },
        {
          "value": "13",
          "type": "LITERAL_NUMBER"
        }
      ]
    },
    {
      "raw": "local flo: b = 12",
      "tokens": [
        {
          "value": "local",
          "type": "DECLARATION_LOCAL"
        },
        {
          "value": "flo:",
          "type": "DECLARATION_TYPE_DECIMAL_SHORT"
        },
        {
          "value": "b",
          "type": "IDENTIFIER"
        },
        {
          "value": "=",
          "type": "OPERATOR_ASSIGNMENT_EQL"
        },
        {
          "value": "12",
          "type": "LITERAL_NUMBER"
        }
      ]
    },
    {
      "raw": "const str{}: peter = #&ðŸ“¦1#",
      "tokens": [
        {
          "value": "const",
          "type": "DECLARATION_CONSTANT"
        },
        {
          "value": "str{}:",
          "type": "IDENTIFIER"
        },
        {
          "value": "peter",
          "type": "IDENTIFIER"
        },
        {
          "value": "=",
          "type": "OPERATOR_ASSIGNMENT_EQL"
        },
        {
          "value": "#&ðŸ“¦1#",
          "type": "PARSER_PLACEHOLDER"
        }
      ]
    },
    {
      "raw": "const str: function a (str: text = #&ðŸ”£2#) #&Æ’1#",
      "tokens": [
        {
          "value": "const",
          "type": "DECLARATION_CONSTANT"
        },
        {
          "value": "str:",
          "type": "DECLARATION_TYPE_STRING_SHORT"
        },
        {
          "value": "function",
          "type": "DECLARATION_FUNCTION_VERBOSE"
        },
        {
          "value": "a",
          "type": "IDENTIFIER"
        },
        {
          "value": "(str:",
          "type": "IDENTIFIER"
        },
        {
          "value": "text",
          "type": "IDENTIFIER"
        },
        {
          "value": "=",
          "type": "OPERATOR_ASSIGNMENT_EQL"
        },
        {
          "value": "#&ðŸ”£2#)",
          "type": "PARSER_PLACEHOLDER"
        },
        {
          "value": "#&Æ’1#",
          "type": "PARSER_PLACEHOLDER"
        }
      ]
    },
    {
      "raw": "local obj: gert = #&ðŸ“¦2#",
      "tokens": [
        {
          "value": "local",
          "type": "DECLARATION_LOCAL"
        },
        {
          "value": "obj:",
          "type": "DECLARATION_TYPE_OBJECT_SHORT"
        },
        {
          "value": "gert",
          "type": "IDENTIFIER"
        },
        {
          "value": "=",
          "type": "OPERATOR_ASSIGNMENT_EQL"
        },
        {
          "value": "#&ðŸ“¦2#",
          "type": "PARSER_PLACEHOLDER"
        }
      ]
    },
    {
      "raw": "local str: frank = (gert.gay) ? #&ðŸ”£6# : #&ðŸ”£7#",
      "tokens": [
        {
          "value": "local",
          "type": "DECLARATION_LOCAL"
        },
        {
          "value": "str:",
          "type": "DECLARATION_TYPE_STRING_SHORT"
        },
        {
          "value": "frank",
          "type": "IDENTIFIER"
        },
        {
          "value": "=",
          "type": "OPERATOR_ASSIGNMENT_EQL"
        },
        {
          "value": "(gert.gay)",
          "type": "IDENTIFIER"
        },
        {
          "value": "?",
          "type": "IDENTIFIER"
        },
        {
          "value": "#&ðŸ”£6#",
          "type": "PARSER_PLACEHOLDER"
        },
        {
          "value": ":",
          "type": "IDENTIFIER"
        },
        {
          "value": "#&ðŸ”£7#",
          "type": "PARSER_PLACEHOLDER"
        }
      ]
    }
  ],
  "Æ’": [
    {
      "expressions": [
        {
          "raw": "{local arr: namen = [#&ðŸ”£3#, #&ðŸ”£4#, #&ðŸ”£5#]",
          "tokens": [
            {
              "value": "{local",
              "type": "IDENTIFIER"
            },
            {
              "value": "arr:",
              "type": "DECLARATION_TYPE_ARRAY_SHORT"
            },
            {
              "value": "namen",
              "type": "IDENTIFIER"
            },
            {
              "value": "=",
              "type": "OPERATOR_ASSIGNMENT_EQL"
            },
            {
              "value": "[#&ðŸ”£3#,",
              "type": "PARSER_PLACEHOLDER"
            },
            {
              "value": "#&ðŸ”£4#,",
              "type": "PARSER_PLACEHOLDER"
            },
            {
              "value": "#&ðŸ”£5#]",
              "type": "PARSER_PLACEHOLDER"
            }
          ]
        },
        {
          "raw": "return #&ðŸ“œ1#",
          "tokens": [
            {
              "value": "return",
              "type": "OPERATOR_UNARY_RETURN"
            },
            {
              "value": "#&ðŸ“œ1#",
              "type": "PARSER_PLACEHOLDER"
            }
          ]
        },
        {
          "raw": "}",
          "tokens": [
            {
              "value": "}",
              "type": "IDENTIFIER"
            }
          ]
        }
      ],
      "Æ’": [],
      "ðŸ”£": [],
      "ðŸ’¬": [],
      "ðŸ“¦": [],
      "ðŸ“œ": [],
      "raw": "{\n\tlocal arr: namen = [#&ðŸ”£3#, #&ðŸ”£4#, #&ðŸ”£5#];\n\treturn #&ðŸ“œ1#;\n}"
    }
  ],
  "ðŸ”£": [
    "\"Peter\"",
    "\"Hallo\"",
    "\"Gert\"",
    "\"Harry\"",
    "\"Frank\"",
    "\"Gerts vriendje // vetervreter\"",
    "\"Eenzaam\""
  ],
  "ðŸ’¬": [],
  "ðŸ“¦": [
    {
      "expressions": [
        {
          "raw": "{name = #&ðŸ”£1#",
          "tokens": [
            {
              "value": "{name",
              "type": "IDENTIFIER"
            },
            {
              "value": "=",
              "type": "OPERATOR_ASSIGNMENT_EQL"
            },
            {
              "value": "#&ðŸ”£1#",
              "type": "PARSER_PLACEHOLDER"
            }
          ]
        },
        {
          "raw": "}",
          "tokens": [
            {
              "value": "}",
              "type": "IDENTIFIER"
            }
          ]
        }
      ],
      "Æ’": [],
      "ðŸ”£": [],
      "ðŸ’¬": [],
      "ðŸ“¦": [],
      "ðŸ“œ": [],
      "raw": "{\n\tname = #&ðŸ”£1#;\n}"
    },
    {
      "expressions": [
        {
          "raw": "{bool: gay = true",
          "tokens": [
            {
              "value": "{bool:",
              "type": "IDENTIFIER"
            },
            {
              "value": "gay",
              "type": "IDENTIFIER"
            },
            {
              "value": "=",
              "type": "OPERATOR_ASSIGNMENT_EQL"
            },
            {
              "value": "true",
              "type": "LITERAL_BOOLEAN_TRUE"
            }
          ]
        },
        {
          "raw": "}",
          "tokens": [
            {
              "value": "}",
              "type": "IDENTIFIER"
            }
          ]
        }
      ],
      "Æ’": [],
      "ðŸ”£": [],
      "ðŸ’¬": [],
      "ðŸ“¦": [],
      "ðŸ“œ": [],
      "raw": "{\n\tbool: gay = true;\n}"
    }
  ],
  "ðŸ“œ": [
    "`${text}         namen[3]`"
  ],
  "raw": "const int: a = 13;\nlocal flo: b = 12;\nconst str{}: peter = #&ðŸ“¦1#;\n\nconst str: function a (str: text = #&ðŸ”£2#) #&Æ’1#;\n\nlocal obj: gert = #&ðŸ“¦2#;\n\nlocal str: frank = (gert.gay) ? #&ðŸ”£6# : #&ðŸ”£7#;\n\n\n"
}