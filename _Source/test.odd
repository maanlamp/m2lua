//Test 123
const any[]: test1 = .23e2346;
const any[]: test2 = 0.23e2346;

#i = 0;
#while (i++ < 10) {
  //do nothing.
};

define a = 12;

type col {
  return (this[0] === "#") & (this.length > 1);
}

class Person (obj: options) {
  using options; //Import options namespace.
  public str: name = name | "A person";

  //Only assign if exists in the current scope/namespace.
  public int: age ?= age;
  public col: hairColour ?= hairColour;
  private vec2: position = new vec2(0, 0);

  greet (str: greeting) {
    print(`${name} says ${greeting}!`);
  }

  update (boo: spacePressed) {
    using this.position;
    y += ~~spacePressed;
  }
}

const peter = new Person([
  name = "Peter",
  age = 21,
  hairColour = 0xF99999
]);

const [Person]: people = [
  peter,
  new Person(),
  new Person()
];

for (person in people) {
  person.greet("hi");
}

const stream = fs.read("file/name.ext");
when stream emits "error", (error) => {
  throw error;
}
when stream emits "data", (data) => {
  print(data);
}
when stream emits "end", () => {
  stream.destroy();
}

{
  using stream;
  emit "end";
}