{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Odd",
	"patterns": [
		{
			"include": "#statements"
		}
	],
	"repository": {
		"statements": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#literals"
				},
				{
					"include": "#keywords"
				},
				{
					"include": "#declarations"
				},
				{
					"include": "#support-objects"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.odd",
					"match": "//.*\n"
				},
				{
					"name": "comment.block.odd",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"declarations": {
			"patterns": [
				{
					"include": "#function-declaration"
				},
				{
					"include": "#iife-declaration"
				},
				{
					"include": "#class-declaration"
				},
				{
					"include": "#type-declaration"
				},
				{
					"include": "#template-declaration"
				}
			]
		},
		"function-declaration": {
			"name": "meta.function.odd",
			"begin": "(function)\\s+([\\[{]*\\w+?[^()\\s]*:)?\\s*(\\w+)",
			"beginCaptures": {
				"1": {
					"name": "storage.type.function.odd"
				},
				"2": {
					"name": "entity.name.type.odd"
				},
				"3": {
					"name": "entity.name.function.odd"
				}
			},
			"end": "(?=;|\\})|(?<=\\})",
			"patterns": [
				{
					"include": "#statements"
				},
				{
					"include": "#keywords"
				}
			]
		},
		"iife-declaration": {
			"name": "meta.function.odd",
			"begin": "(iife)\\s+([\\[{]*\\w+?[^()\\s]*:)?\\s*(\\w+)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.odd"
				},
				"2": {
					"name": "entity.name.type.odd"
				},
				"3": {
					"name": "entity.name.function.odd"
				}
			},
			"end": "(?=;|\\})|(?<=\\})",
			"patterns": [
				{
					"include": "#statements"
				},
				{
					"include": "#keywords"
				}
			]
		},
		"class-declaration": {
			"name": "meta.class.odd",
			"begin": "(class)\\s+(\\w+)",
			"beginCaptures": {
				"1": {
					"name": "storage.type.class.odd"
				},
				"2": {
					"name": "entity.name.class.odd"
				}
			},
			"end": "(?=;|\\})|(?<=\\})",
			"patterns": [
				{
					"include": "#method-declaration"
				},
				{
					"include": "#statements"
				}
			]
		},
		"template-declaration": {
			"name": "meta.template.odd",
			"begin": "(template)\\s+(\\w+)",
			"beginCaptures": {
				"1": {
					"name": "storage.type.template.odd"
				},
				"2": {
					"name": "entity.name.class.odd"
				}
			},
			"end": "(?=;|\\})|(?<=\\})",
			"patterns": [
				{
					"include": "#statements"
				}
			]
		},
		"type-declaration": {
			"name": "meta.type.odd",
			"begin": "(type)\\s+(\\w+)",
			"beginCaptures": {
				"1": {
					"name": "storage.type.type.odd"
				},
				"2": {
					"name": "entity.name.type.odd"
				}
			},
			"end": "(?=;|\\})|(?<=\\})",
			"patterns": [
				{
					"include": "#statements"
				}
			]
		},
		"method-declaration": {
			"name": "meta.method.declaration.odd",
			"begin": "(\\w+)\\s+\\(.*\\)\\s*\\{",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.odd"
				}
			},
			"end": "(?=\\}|;|,)|(?<=\\})",
			"patterns": [
				{
					"include": "#comment"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.odd",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.odd",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.template.odd",
					"begin": "(\\w*)(`)",
					"beginCaptures": {
						"1": {"name": "entity.name.function.tagged-template.odd"},
						"2": {"name": "punctuation.definition.string.template.begin.odd"}
					},
					"end": "`",
					"endCaptures": {
						"0": {"name": "punctuation.definition.string.template.end.odd"}
					},
					"patterns": [
						{
							"name": "constant.character.escape.odd",
							"match": "\\\\."
						},
						{
							"name": "meta.template.expression.odd",
							"begin": "\\$\\{",
							"beginCaptures": {
								"0": {"name": "punctuation.definition.template-expression.begin.odd"}
							},
							"end": "\\}",
							"endCaptures": {
								"0": {"name": "punctuation.definition.template-expression.end.odd"}
							}
						}
					]
				}
			]
		},
		"literals": {
			"patterns": [
				{
					"name": "constant.numeric.hex.odd",
					"match": "\\b0(x|X)[0-9a-fA-F]+\\b"
				},
				{
					"name": "constant.numeric.odd",
					"match": "\\d*\\.\\d+[eE]?[+-]?\\d+\\b|\\b\\d+\\b"
				},
				{
					"name": "constant.language.true.odd",
					"match": "\\btrue\\b"
				},
				{
					"name": "constant.language.false.odd",
					"match": "\\bfalse\\b"
				},
				{
					"name": "constant.language.null.odd",
					"match": "\\b(null|nil)\\b"
				},
				{
					"name": "constant.language.undefined.odd",
					"match": "\\bundefined\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.odd",
					"match": "\\b(if|while|for|return|when|emits?|defer|then|throws?|continue|break|case|switch|default|repeat|operator)\\b"
				},
				{
					"name": "storage.type.odd",
					"match": "\\b(const|local|def(?:ine)?)\\b|=>"
				},
				{
					"name": "storage.modifier.odd",
					"match": "\\b(overt)\\b"
				},
				{
					"name": "variable.language.this.odd",
					"match": "\\b(this)\\b"
				},
				{
					"name": "keyword.control.using.odd",
					"match": "\\b(using)\\b"
				},
				{
					"name": "keyword.operator.odd",
					"match": "[-\\.\\/+><*=%~?!$|&^:]"
				},
				{
					"name": "keyword.operator.odd",
					"match": "\\b(and|or|exists|instanceof)\\b"
				},
				{
					"name": "meta.class-instantiation.odd",
					"begin": "\\b(new)\\b",
					"beginCaptures": {
						"1": {"name": "keyword.operator.new.odd"}
					},
					"end": "(\\w+)",
					"endCaptures": {
						"1": {"name": "entity.name.class.odd"}
					}
				},
				{
					"name": "keyword.control.preprocessor.odd",
					"match": "#(if|while|for|return|when|emits?|defer|then|throws?|continue|break|case|switch|default|repeat|operator)?"
				},
				{
					"name": "entity.name.type.odd",
					"match": "[\\[{]*\\w+?[^()\\s]*:"
				}
			]
		},
		"support-objects": {
			"patterns": [
				{
					"name": "support.class.odd",
					"match": "\\b(String|Number|Boolean|Array|Object|Function|Error|Class)\\b"
				}
			]
		}
	},
	"scopeName": "source.odd"
}