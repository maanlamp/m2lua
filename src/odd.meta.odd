program = statements ";"?;

statements = (type-declaration | expression) (";" statement)*;

type-declaration = .identifier type-parameter* "::" type;

type-parameter =
	.identifier
	| "(" type .identifier ")";

type = type-function;

type-function = type-union ("->" type-function)?;

type-union = type-intersection ("|" type-union)?;

type-intersection = type-application ("&" type-intersection)?;

type-application = type-literal type-application?;

type-literal =
	"{" type-field* "}"
	| "[" type* "]"
	| "(" type ")"
	| literal;

type-field = type-key "::" type;

type-key = literal+;

literal =
	.identifier
	| .constant
	| .string
	| .number
	| .operator;